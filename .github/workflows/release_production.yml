name: DSmartTrader Production Release
on:
  push:
    tags:
      - production_*
jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: Setup Node
        uses: actions/setup-node@f1f314fca9dfce2769ece7d933488f076716723e
        with:
          node-version: 12
      - name: Install dependencies
        uses: "./.github/actions/npm_install"
      - name: Build
        uses: "./.github/actions/build"
        with:
          target: production
      - name: Versioning
        uses: "./.github/actions/versioning"
        with:
          target_branch: production
      - name: "Run Tests"
        run: npm run test
      - name: Upload Artifacts
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32
        with:
          name: dist
          path: dist
  publish_cloudflare_production:
    name: Publish to Cloudflare Production
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: Setup Node
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7
        with:
          node-version: 20
      - name: Download Artifacts
        uses: actions/download-artifact@87c55149d96e628cc2ef7e6fc2aab372015aec85
        with:
          name: dist
          path: dist
      - name: Publish to Cloudflare
        uses: "./.github/actions/publish_to_pages_production"
        with:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - name: Build Docker image and push to Docker hub and K8S
        uses: "./.github/actions/build_and_push_docker_image"
        with:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_ORGANISATION: ${{ secrets.DOCKERHUB_ORGANISATION }}
          K8S_NAMESPACE: smarttrader-deriv-app-production
          KUBE_SERVER: ${{ secrets.KUBE_SERVER }}
          SERVICEACCOUNT_TOKEN: ${{ secrets.SERVICEACCOUNT_TOKEN }}
          CA_CRT: ${{ secrets.CA_CRT }}
          APP_VERSION: latest

  notify_on_slack:
    name: Notify on Slack
    if: always()
    runs-on: ubuntu-latest

    needs: [publish_cloudflare_production, build_and_test]
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: Setup Node
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7
        with:
          node-version: 20
      - name: Conclusion
        uses: technote-space/workflow-conclusion-action@45ce8e0eb155657ab8ccf346ade734257fd196a5

      - name: Download Artifacts
        uses: actions/download-artifact@87c55149d96e628cc2ef7e6fc2aab372015aec85
        with:
          name: dist
          path: dist
      - name: Grab Version Name
        id: extract_version
        run: echo "RELEASE_VERSION=$(cat dist/version.txt)" >> $GITHUB_ENV
      - name: Send Slack Notification
        uses: "./.github/actions/notify_slack"
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: ${{ env.WORKFLOW_CONCLUSION }}
          release_type: Production
          version: ${{ steps.extract_version.outputs.RELEASE_VERSION }}
